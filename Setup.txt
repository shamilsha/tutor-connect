(1) Install java (SE runtime environment, check if install using "java -version")
(2) Install git
(3) Install mvn.
     (a) Download binary zip file from https://maven.apache.org/download.cgi
     (b) Create a folder "Maven" under C:\Program Files\" folder.
     (c) Edit Path system variable to add C:\Program Files\Maven\apache-maven-3.9.9\bin folder
          click on This PC > Properties > Advanced system settings > Environment Variables > System variables > Find Path and Edit
     (d) verify it works using "mvn -version". You might need to start new   window.
(4) Install node.js (need this for npm)
    (a) Download from https://nodejs.org/ (use LTS long term support version)
    (b) Install the msi package ( make sure to check 'intall necessary tools ...', it looks like also install python too)
    (c) check "node --version" and "npm --version"
    (d) If get some kind of about ExecutionPolicy error do the following
        (I) open powershell as administrator and run "Set-ExecutionPolicy RemoteSigned". Restart cursor if already opened.

(5) Install Cursor and run
(6) clone project from github:
     git clone git@github.com:shamilsha/tutor-connect.git   (https://github.com/shamilsha/tutor-connect)
(7) start the application in this order.
    (a) Start backend
        go to C:\myTutor\backend\tutor-connect and run  "mvn spring-boot:run"
        This will install necessary packages if not already installed based on package.json file and start the backend application.
      
     http://localhost:8080/h2-console with these credentials:
     JDBC URL: jdbc:h2:mem:tutordb
     Username: sa
     Password: (leave empty)

    (b) Start signalling server
        go to C:\myTutor\signaling-server and run "npm install" followed by "npm start"

    (b) Start frontend
        go to C:\myTutor\frontend and run "npm install" followed by "npm start"

(8) How to access Database:
    Used H2 database, database can be in memory temporary and file based permanent.
    go to this link, http://localhost:8080/h2-console
    use the following information,
       JDBC URL: jdbc:h2:file:./data/tutordb
       Username: sa
       Password: (leave empty)
       Click "Connect"
(9) Ports:
    8080 : backend run on this port.
    8081 : signaling server listen on this port.
    3000 : frontend webserver runs on this port.
    Q: how to check  if anything listening on a port
    A: netstat -ano | findstr :3000
(10) Setup certificate to work with https
cd frontend

# Create a Certificate Authority
npx mkcert create-ca

# Create certificates for your domains
     cd to frontend
     npx mkcert create-ca
     npx mkcert create-cert --domains localhost,127.0.0.1,192.168.18.15

Q: how to test audio/video in home network
A: Access to audio/video require https  protocol but there is some workaround to bypass in local network
   chrome://flags/#unsafely-treat-insecure-origin-as-secure
   run the above command and enter the ip address such as http://192.168.18.15:3000 then restart browser.
   now chrome will treat it as secure ip, localhost always considered secure.
   but before that COR should be allowed

Q: Deploy to Azure
A: open command prompt
   (1) Deploy backend....
   az login (it will open pop up window to varify)
   cd backend/tutor-connect
   # build jar file for deployment
   mvn clean package -DskipTests
   # deploy jar file to azure
   az webapp deploy --resource-group tutor-cancen-rg --name tutor-cancen-backend --src-path target/tutor-connect-0.0.1-SNAPSHOT.jar --type jar
   # verify it is working
   curl https://tutor-cancen-backend-bxepcjdqeca7f6bk.canadacentral-01.azurewebsites.net/api/users/health
   (2) Deploy signaling server:
   cd signaling-server
   #compress folder
   Compress-Archive -Path server.js,package.json,package-lock.json -DestinationPath signaling-server.zip -Force
   # deploy
   //#az webapp config set --resource-group tutor-cancen-rg --name tutor-cancen-signalling --startup-file "npm install && node server.js
   az webapp deployment source config-zip --resource-group tutor-cancen-rg --name tutor-cancen-signalling --src signaling-server.zip
   az webapp config set --resource-group tutor-cancen-rg --name tutor-cancen-signalling --startup-file "npm install && node server.js"

   # test
   curl https://tutor-cancen-signalling-e7bcaybxd0dygeec.canadacentral-01.azurewebsites.net/health
   # download  log for debuggging
   az webapp log download --resource-group tutor-cancen-rg --name tutor-cancen-signalling

   #  see live log
   az webapp log tail --resource-group tutor-cancen-rg --name tutor-cancen-signalling

   (3) deploy frontend
    # make sure correct cli is installed
    npm install -g @azure/static-web-apps-cli
    # get deployment  token from portal
    332ea4ac45c51a22d0e89c997e655d6fbfeff2cd35c712a89ad6737f3a1f214901-434cbdd2-0451-4c3a-985b-3f56ae83184500f27250ba06940f
    # go to frontend folder and build it
    # npm run build
    npm run build:versioned
    # deploy it
    swa deploy --deployment-token 332ea4ac45c51a22d0e89c997e655d6fbfeff2cd35c712a89ad6737f3a1f214901-434cbdd2-0451-4c3a-985b-3f56ae83184500f27250ba06940f --app-location build
    # test the site
    https://thankful-water-0ba06940f-preview.eastus2.1.azurestaticapps.net
    
    



