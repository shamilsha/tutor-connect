name: Deploy to Azure

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  RESOURCE_GROUP: tutor-connect-rg
  BACKEND_APP: tutor-connect-backend
  SIGNALING_APP: tutor-connect-signaling
  FRONTEND_APP: tutor-connect-frontend

jobs:
  # Build and test backend
  backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Build with Maven
      run: |
        cd backend/tutor-connect
        mvn clean package -DskipTests
    
    - name: Upload backend artifact
      uses: actions/upload-artifact@v3
      with:
        name: backend-jar
        path: backend/tutor-connect/target/tutor-connect-0.0.1-SNAPSHOT.jar

  # Build and test signaling server
  signaling:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: signaling-server/package-lock.json
    
    - name: Install dependencies
      run: |
        cd signaling-server
        npm ci
    
    - name: Create signaling deployment package
      run: |
        cd signaling-server
        zip -r signaling-deploy.zip . -x "node_modules/*" "*.log" ".git/*"
    
    - name: Upload signaling artifact
      uses: actions/upload-artifact@v3
      with:
        name: signaling-zip
        path: signaling-server/signaling-deploy.zip

  # Build frontend
  frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
      env:
        REACT_APP_BACKEND_URL: https://${{ env.BACKEND_APP }}.azurewebsites.net
        REACT_APP_SIGNALING_URL: wss://${{ env.SIGNALING_APP }}.azurewebsites.net
    
    - name: Upload frontend artifact
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/build

  # Deploy to Azure (only on main branch)
  deploy:
    needs: [backend, signaling, frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download backend artifact
      uses: actions/download-artifact@v3
      with:
        name: backend-jar
    
    - name: Download signaling artifact
      uses: actions/download-artifact@v3
      with:
        name: signaling-zip
    
    - name: Download frontend artifact
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
    
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy backend to Azure
      run: |
        az webapp deployment source config-zip \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --name ${{ env.BACKEND_APP }} \
          --src tutor-connect-0.0.1-SNAPSHOT.jar
    
    - name: Deploy signaling server to Azure
      run: |
        az webapp deployment source config-zip \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --name ${{ env.SIGNALING_APP }} \
          --src signaling-deploy.zip
    
    - name: Deploy frontend to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        app_location: "/frontend"
        output_location: "build"
        skip_app_build: true
    
    - name: Restart services
      run: |
        az webapp restart --name ${{ env.BACKEND_APP }} --resource-group ${{ env.RESOURCE_GROUP }}
        az webapp restart --name ${{ env.SIGNALING_APP }} --resource-group ${{ env.RESOURCE_GROUP }}
    
    - name: Show deployment URLs
      run: |
        echo "ðŸš€ Deployment completed successfully!"
        echo "Frontend: https://${{ env.FRONTEND_APP }}.azurestaticapps.net"
        echo "Backend: https://${{ env.BACKEND_APP }}.azurewebsites.net"
        echo "Signaling: wss://${{ env.SIGNALING_APP }}.azurewebsites.net"

