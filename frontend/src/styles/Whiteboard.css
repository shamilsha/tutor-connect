.whiteboard-container {
  position: relative; /* Relative positioning within dashboard-content */
  z-index: 1; /* Default z-index */
  background-color: rgba(230, 243, 255, 0.9); /* Semi-transparent light blue background for debugging */
  border: 4px solid #8B4513; /* Thicker brown border for better visibility */
  margin: 0; /* Remove all margins to ensure it starts at top */
  box-shadow: 0 0 15px rgba(139, 69, 19, 0.6); /* Brown glow for debugging */
  overflow: visible; /* Let dashboard-content handle scrolling */
  box-sizing: border-box;
  /* Allow whiteboard-container to expand to match its child dimensions exactly */
  width: auto; /* Let it expand to match child dimensions */
  height: auto; /* Let it expand to match child dimensions */
  /* Remove min-width/min-height constraints to let it match child exactly */
}

/* Whiteboard container should match dashboard-content dimensions */
/* No additional media query styles needed - base class handles all cases */

/* When screen sharing is active, overlay the screen share with matching dimensions */
.whiteboard-container.screen-share-overlay {
  position: absolute !important; /* Absolute positioning to overlay screen share */
  top: 0 !important;
  left: 0 !important;
  /* Allow inline styles to control dimensions - don't override with CSS */
  /* width and height will be controlled by inline styles from JavaScript */
  /* Remove ALL constraints to let it match screen share exactly */
  min-width: unset !important; /* Remove any minimum width constraints */
  min-height: unset !important; /* Remove any minimum height constraints */
  max-width: unset !important; /* Remove any maximum width constraints */
  max-height: unset !important; /* Remove any maximum height constraints */
  /* CRITICAL: Allow whiteboard to exceed dashboard-content dimensions */
  /* Don't set width/height here - let inline styles control it */
  /* The inline styles will override any CSS constraints */
  background-color: transparent !important; /* Make container fully transparent during screen share */
  z-index: 2 !important; /* Above screen share (z-index: 1) */
  border: none !important; /* Remove border during screen share */
  box-shadow: none !important; /* Remove box shadow during screen share */
  pointer-events: all !important; /* Ensure drawing works */
}

/* Removed whiteboard-scroll-container styles - now handled by whiteboard-container */

.pdf-controls {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-left: 10px;
}

.pdf-controls button {
  padding: 5px 10px;
  border: 1px solid #ddd;
  background-color: #fff;
  border-radius: 4px;
  cursor: pointer;
}

.pdf-controls button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.pdf-controls span {
  font-size: 12px;
  color: #666;
}

/* PDF Page specific styling to remove any default spacing */
.pdf-page-container {
  margin: 0 !important;
  padding: 0 !important;
  display: block !important;
  line-height: 0 !important;
  box-sizing: border-box !important;
}

.pdf-page-container > * {
  margin: 0 !important;
  padding: 0 !important;
  display: block !important;
  line-height: 0 !important;
  box-sizing: border-box !important;
}

/* Ensure PDF pages have no default margins or padding */
.react-pdf__Page {
  margin: 0 !important;
  padding: 0 !important;
  display: block !important;
  line-height: 0 !important;
  box-sizing: border-box !important;
}

.react-pdf__Page__canvas {
  margin: 0 !important;
  padding: 0 !important;
  display: block !important;
  box-sizing: border-box !important;
}

/* Remove any potential spacing from PDF document container */
.react-pdf__Document {
  margin: 0 !important;
  padding: 0 !important;
  display: block !important;
  line-height: 0 !important;
}

/* Ensure no spacing in the PDF pages flex container */
.pdf-pages-container {
  margin: 0 !important;
  padding: 0 !important;
  display: flex !important;
  flex-direction: column !important;
  align-items: center !important;
  line-height: 0 !important;
}